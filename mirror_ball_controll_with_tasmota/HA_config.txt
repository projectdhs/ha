shell_command:
  m_rgb: 'curl -G "http://172.30.1.46/cm?cmnd=IRSend%20%7B%22Protocol%22:%22NEC%22,%22Bits%22:32,%22Data%22:%220xFFE21D%22%7D"'
  m_rg: 'curl -G "http://172.30.1.46/cm?cmnd=IRSend%20%7B%22Protocol%22:%22NEC%22,%22Bits%22:32,%22Data%22:%220xFF6897%22%7D"'
  m_rb: 'curl -G "http://172.30.1.46/cm?cmnd=IRSend%20%7B%22Protocol%22:%22NEC%22,%22Bits%22:32,%22Data%22:%220xFF9867%22%7D"'
  m_gb: 'curl -G "http://172.30.1.46/cm?cmnd=IRSend%20%7B%22Protocol%22:%22NEC%22,%22Bits%22:32,%22Data%22:%220xFFB04F%22%7D"'
  m_power: 'curl -G "http://172.30.1.46/cm?cmnd=IRSend%20%7B%22Protocol%22:%22NEC%22,%22Bits%22:32,%22Data%22:%220xFFA25D%22%7D"'
  m_flash: 'curl -G "http://172.30.1.46/cm?cmnd=IRSend%20%7B%22Protocol%22:%22NEC%22,%22Bits%22:32,%22Data%22:%220xFF629D%22%7D"'
  m_auto: 'curl -G "http://172.30.1.46/cm?cmnd=IRSend%20%7B%22Protocol%22:%22NEC%22,%22Bits%22:32,%22Data%22:%220xFF22DD%22%7D"'
  m_music1: 'curl -G "http://172.30.1.46/cm?cmnd=IRSend%20%7B%22Protocol%22:%22NEC%22,%22Bits%22:32,%22Data%22:%220xFF02FD%22%7D"'
  m_music2: 'curl -G "http://172.30.1.46/cm?cmnd=IRSend%20%7B%22Protocol%22:%22NEC%22,%22Bits%22:32,%22Data%22:%220xFFC23D%22%7D"'
  m_red: 'curl -G "http://172.30.1.46/cm?cmnd=IRSend%20%7B%22Protocol%22:%22NEC%22,%22Bits%22:32,%22Data%22:%220xFFE01F%22%7D"'
  m_green: 'curl -G "http://172.30.1.46/cm?cmnd=IRSend%20%7B%22Protocol%22:%22NEC%22,%22Bits%22:32,%22Data%22:%220xFFA857%22%7D"'
  m_blue: 'curl -G "http://172.30.1.46/cm?cmnd=IRSend%20%7B%22Protocol%22:%22NEC%22,%22Bits%22:32,%22Data%22:%220xFF906F%22%7D"'
  
input_boolean:
  m_state:
    name: "미러볼 전원"  
    
automation:
  - alias: m_toggle
    trigger:
      platform: mqtt
      topic: "mirror/toggle"
      payload: ""
      encoding: "utf-8"
    action:
      - service: shell_command.m_power
      - service: input_boolean.toggle
        entity_id: input_boolean.m_state
  - alias: m_init
    trigger:
      platform: mqtt
      topic: "mirror/init"
      payload: ""
      encoding: "utf-8"
    action:
      - service: shell_command.m_power
      - service: input_boolean.turn_off
        entity_id: input_boolean.m_state
  - alias: m_auto  
    trigger:
      entity_id: input_boolean.m_state
      platform: state
      from: 'off'
      to: 'on'  
    action:
      - service: script.m_random
      
#scripts.yaml 내용    

'm_run':
  alias: 미러볼실행
  sequence:
  - service: shell_command.m_power
'mirror_on':
  alias: 미러볼on
  sequence:
    - service: shell_command.m_power
    - service: input_boolean.turn_on
      entity_id: input_boolean.m_state
'mirror_off':
  alias: 미러볼off
  sequence:
    - service: shell_command.m_power
    - service: input_boolean.turn_off
      entity_id: input_boolean.m_state 
'm_random':
  alias: "m_random"
  sequence:
  - repeat:
      while:
        - condition: state
          entity_id: input_boolean.m_state
          state: "on"
      sequence: 
        - service: script.m_{{range(1,3)|random}}
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false   
'm_1':
  alias: "m_1"
  sequence:
  - repeat:
      while:
        - condition: state
          entity_id: input_boolean.m_state
          state: "on"
      sequence: 
        - service: shell_command.m_rgb
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false              
        - service: shell_command.m_rg
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false          
        - service: shell_command.m_gb
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false          
        - service: shell_command.m_rb
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false          
        - service: shell_command.m_rg
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false          
        - service: shell_command.m_green
        - delay: 00:00:15
'm_2':
  alias: "m_2"
  sequence:
  - repeat:
      while:
        - condition: state
          entity_id: input_boolean.m_state
          state: "on"
      sequence: 
        - service: shell_command.m_gb
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false              
        - service: shell_command.m_rgb
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false          
        - service: shell_command.m_blue
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false          
        - service: shell_command.m_gb
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false          
        - service: shell_command.m_rg
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false          
        - service: shell_command.m_rb
        - delay: 00:00:15
'm_3':
  alias: "m_3"
  sequence:
  - repeat:
      while:
        - condition: state
          entity_id: input_boolean.m_state
          state: "on"
      sequence: 
        - service: shell_command.m_rb
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false              
        - service: shell_command.m_rg
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false          
        - service: shell_command.m_rgb
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false          
        - service: shell_command.m_rb
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false          
        - service: shell_command.m_red
        - delay: 00:00:15
        - wait_template: '{{ states.input_boolean.m_state.state == "on" }}'
          timeout: '00:00:02'    
          continue_on_timeout: false          
        - service: shell_command.m_gb
        - delay: 00:00:15
